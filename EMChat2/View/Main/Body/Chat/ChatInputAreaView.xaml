<UserControl x:Class="EMChat2.View.Main.Body.Chat.ChatInputAreaView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             xmlns:view="clr-namespace:EMChat2.View"
             xmlns:chat="clr-namespace:EMChat2.View.Main.Body.Chat"
             xmlns:common="clr-namespace:EMChat2.Common"
             xmlns:enum="clr-namespace:EMChat2.Model.Enum"
             xmlns:wpf="clr-namespace:QinSoft.WPF;assembly=QinSoft.WPF"
             xmlns:wpfControl="clr-namespace:QinSoft.WPF.Control;assembly=QinSoft.WPF.Control"
             mc:Ignorable="d"
             d:DesignHeight="200" d:DesignWidth="400">
    <UserControl.Resources>
        <common:BindingProxy x:Key="chatData" Data="{Binding}"></common:BindingProxy>
    </UserControl.Resources>
    <Grid>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="30"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                    <Button ToolTip="清空(Alt+Shift+C)" Style="{StaticResource IM-Chat-Button}" Margin="8,0" Command="{Binding ClearInputMessageContentCommand}">
                        <TextBlock Style="{StaticResource IconTrashO}"></TextBlock>
                    </Button>
                    <Button x:Name="emotionBtn" ToolTip="表情" Style="{StaticResource IM-Chat-Button}" Margin="8,0">
                        <TextBlock Style="{StaticResource IconSmileO}"></TextBlock>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ei:ChangePropertyAction PropertyName="IsOpen" Value="True" TargetObject="{Binding ElementName=emotionPickerPopup}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button x:Name="captureScreenBtn" ToolTip="截图(Alt+Shift+A)" Style="{StaticResource IM-Chat-Button}" Margin="8,0" Command="{Binding CaptureScreenCommand}" CommandParameter="{x:Static enum:CaptureScreenTypeEnum.HideApplication}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Style="{StaticResource IconCut}" VerticalAlignment="Center"></TextBlock>
                            <Button Style="{StaticResource IM-Icon-Button}" VerticalAlignment="Center" Margin="2,0,0,0">
                                <TextBlock Style="{StaticResource IconAngleDown}" FontSize="{StaticResource SmallIconFontSize}"></TextBlock>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <ei:ChangePropertyAction PropertyName="IsOpen" Value="True" TargetObject="{Binding ElementName=captureScreenPopup}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>
                        </StackPanel>
                    </Button>
                    <Button ToolTip="图片(Alt+Shift+I)" Style="{StaticResource IM-Chat-Button}" Margin="8,0" Command="{Binding SelectImageCommand}">
                        <TextBlock Style="{StaticResource IconPictureO}"></TextBlock>
                    </Button>
                    <Button ToolTip="文件(Alt+Shift+F)" Style="{StaticResource IM-Chat-Button}" Margin="8,0" Command="{Binding SelectFileCommand}">
                        <TextBlock Style="{StaticResource IconFileO}"></TextBlock>
                    </Button>
                </StackPanel>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <ToggleButton ToolTip="侧边栏" Style="{StaticResource IM-Chat-ToggleButton}" IsChecked="{Binding IsShowChatSlider,Mode=TwoWay}">
                        <TextBlock Style="{StaticResource IconSliders}"></TextBlock>
                    </ToggleButton>
                </StackPanel>
            </Grid>
            <Grid Grid.Row="1">
                <Rectangle Stroke="{StaticResource DeepPurpleBrush}" StrokeDashArray="2 2" StrokeThickness="2" Fill="Transparent" Visibility="{Binding IsDragMessageContent,Converter={x:Static wpf:ValueConverters.BooleanToVisibilityConverter}}"></Rectangle>
                <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                    <wpfControl:AutoAdjustRichTextBox IsAuto="False" Style="{StaticResource IM-Message-RichTextBox}" BindingDocument="{Binding InputMessageContent,Converter={x:Static view:ValueConverters.MessageToDocumentConverter}, Mode=TwoWay}" common:MessageRichTextBoxAttach.InputMessageContent="{Binding TemporaryInputMessagContent}" IsReadOnly="{Binding BusinessSetting.AllowInputText, Converter={x:Static wpf:ValueConverters.ReverseBooleanConverter}}" GotFocus="AutoAdjustRichTextBox_GotFocus" TextChanged="AutoAdjustRichTextBox_TextChanged" LostFocus="AutoAdjustRichTextBox_LostFocus">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewDragEnter">
                                <ei:CallMethodAction TargetObject="{Binding}" MethodName="DragEnterMessageContentCommand"></ei:CallMethodAction>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="PreviewDragLeave">
                                <ei:CallMethodAction TargetObject="{Binding}" MethodName="DragLeaveMessageContentCommand"></ei:CallMethodAction>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="PreviewDragOver">
                                <ei:CallMethodAction TargetObject="{Binding}" MethodName="DragOverMessageContentCommand"></ei:CallMethodAction>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="PreviewDrop">
                                <ei:CallMethodAction TargetObject="{Binding}" MethodName="DropMessageContentCommand"></ei:CallMethodAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                        <wpfControl:AutoAdjustRichTextBox.InputBindings>
                            <KeyBinding Modifiers="Shift" Key="Enter" Command="{Binding SendMessageCommand}"></KeyBinding>
                            <KeyBinding Modifiers="Alt+Shift" Key="C" Command="{Binding ClearInputMessageContentCommand}"></KeyBinding>
                            <KeyBinding Modifiers="Alt+Shift" Key="A" Command="{Binding CaptureScreenCommand}" CommandParameter="{x:Static enum:CaptureScreenTypeEnum.HideApplication}"></KeyBinding>
                            <KeyBinding Modifiers="Alt+Shift" Key="I" Command="{Binding SelectImageCommand}"></KeyBinding>
                            <KeyBinding Modifiers="Alt+Shift" Key="F" Command="{Binding SelectFileCommand}"></KeyBinding>
                        </wpfControl:AutoAdjustRichTextBox.InputBindings>

                        <wpfControl:AutoAdjustRichTextBox.ContextMenu>
                            <ContextMenu Style="{StaticResource BaseContextMenu}" ItemContainerStyle="{StaticResource MenuItem-H}">
                                <MenuItem Header="粘贴" Command="{Binding Data.PasteMessageContentCommand, Source={StaticResource chatData}}"></MenuItem>
                            </ContextMenu>
                        </wpfControl:AutoAdjustRichTextBox.ContextMenu>
                    </wpfControl:AutoAdjustRichTextBox>
                </ScrollViewer>

            </Grid>
            <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Content="发送" ToolTip="发送消息(Shift+Enter)" Command="{Binding SendMessageCommand}" Style="{StaticResource IM-Chat-Button}" Margin="5"></Button>
            </StackPanel>
        </Grid>
        <Popup x:Name="emotionPickerPopup" PlacementTarget="{Binding ElementName=emotionBtn}" StaysOpen="False" AllowsTransparency="True" Placement="Top"  PopupAnimation="Fade" Height="200" Width="420">
            <chat:EmotionPickerAreaView DataContext="{Binding EmotionPickerAreaViewModel}"></chat:EmotionPickerAreaView>
        </Popup>

        <Popup x:Name="captureScreenPopup" PlacementTarget="{Binding ElementName=captureScreenBtn}" StaysOpen="False" AllowsTransparency="True" Placement="Bottom"  PopupAnimation="Fade" Width="180">
            <Border BorderThickness="1" BorderBrush="{StaticResource Gray3Brush}">
                <Menu Style="{StaticResource Menu-V}" ItemContainerStyle="{StaticResource MenuItem-H}">
                    <MenuItem Command="{Binding CaptureScreenCommand}" CommandParameter="{x:Static enum:CaptureScreenTypeEnum.NotHideApplication}">
                        <MenuItem.Icon>
                            <TextBlock Style="{StaticResource IconCut}"></TextBlock>
                        </MenuItem.Icon>
                        <MenuItem.Header>不隐藏当前窗口截图</MenuItem.Header>
                    </MenuItem>
                </Menu>
            </Border>
        </Popup>
    </Grid>
</UserControl>
