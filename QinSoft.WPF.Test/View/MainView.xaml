<Window x:Class="QinSoft.WPF.Test.View.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:test="clr-namespace:QinSoft.WPF.Test"
        xmlns:control="clr-namespace:QinSoft.WPF.Control;assembly=QinSoft.WPF.Control"
        xmlns:wpf="clr-namespace:QinSoft.WPF;assembly=QinSoft.WPF"
        mc:Ignorable="d"
        Title="{Binding Title}" Height="800" Width="1300">
    <DockPanel>
        <ContentControl Style="{StaticResource AppPanel}" DockPanel.Dock="Top">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal">
                    <ToggleButton x:Name="PART_MenuToggle"  IsChecked="True" Style="{StaticResource SwitchToggleButton-Success}" Margin="10,5" Width="50" Height="30">
                        <!--<TextBlock Style="{StaticResource IconReorder}" Foreground="White" VerticalAlignment="Center"></TextBlock>-->
                        <!--<ToggleButton.Triggers>
                            <EventTrigger RoutedEvent="ToggleButton.Checked">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_MenuCard" Storyboard.TargetProperty="Width" From="0" To="150" Duration="0:0:0.3"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_MenuCard" Storyboard.TargetProperty="Width" From="150" To="0" Duration="0:0:0.3"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ToggleButton.Triggers>-->
                    </ToggleButton>
                    <TextBlock Text="QinSoft.WPF" VerticalAlignment="Center"></TextBlock>
                </StackPanel>

                <StackPanel Grid.Column="2" Orientation="Horizontal">
                    <Button Style="{StaticResource RaisedButton-Danger}" Width="30" Height="30" VerticalAlignment="Top">
                        <TextBlock Style="{StaticResource IconRemove}" VerticalAlignment="Center" ></TextBlock>
                    </Button>
                </StackPanel>
            </Grid>
        </ContentControl>
        <ContentControl x:Name="PART_MenuCard"  Margin="0,0,1,0" Padding="2" DockPanel.Dock="Left">
            <ContentControl.Style>
                <Style TargetType="ContentControl" BasedOn="{StaticResource CardPanel}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsChecked,ElementName=PART_MenuToggle}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Width" From="0" To="150" Duration="0:0:0.3"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Width" From="150" To="0" Duration="0:0:0.3"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentControl.Style>
            <Menu Style="{StaticResource Menu-V}" >
                <MenuItem Header="menu 1"  Style="{StaticResource MenuItem-H}">
                    <MenuItem.Icon>
                        <TextBlock Style="{StaticResource IconSearch}" ></TextBlock>
                    </MenuItem.Icon>
                    <MenuItem Header="menu 1 1"  Style="{StaticResource MenuItem-H}">
                        <MenuItem.Icon>
                            <TextBlock Style="{StaticResource IconSearch}" ></TextBlock>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="menu 1 2"  Style="{StaticResource MenuItem-H}">
                        <MenuItem.Icon>
                            <TextBlock Style="{StaticResource IconSearch}" ></TextBlock>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="menu 2" Style="{StaticResource MenuItem-H}">
                    <MenuItem Style="{StaticResource MenuItem-H}">
                        <MenuItem.Header>
                            <RadioButton Content="1" Style="{StaticResource InputRadio}"></RadioButton>
                        </MenuItem.Header>
                    </MenuItem>
                    <RadioButton Content="2"></RadioButton>
                    <RadioButton Content="3"></RadioButton>
                    <Separator></Separator>
                    <MenuItem Style="{StaticResource MenuItem-H}">
                        <MenuItem.Icon>
                            <CheckBox Style="{StaticResource InputCheck-Success}" IsChecked="{Binding IsChecked,RelativeSource={RelativeSource AncestorType=MenuItem},UpdateSourceTrigger=PropertyChanged}"></CheckBox>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
            </Menu>
        </ContentControl>
        <TabControl Style="{StaticResource Tab}" ItemContainerStyle="{StaticResource TabItem-Primary}">
            <TabItem Header="Base">
                <ContentControl Style="{StaticResource CardPanel}">
                    <WrapPanel>
                        <TextBlock Text="测试" Style="{StaticResource Tip-Success}" VerticalAlignment="Center"></TextBlock>
                        <TextBlock Text="测试" Style="{StaticResource Tip-Primary}" VerticalAlignment="Center"></TextBlock>
                        <TextBlock Text="测试" Style="{StaticResource Tip-Warning}" VerticalAlignment="Center"></TextBlock>
                        <TextBlock Text="测试" Style="{StaticResource Tip-Danger}" VerticalAlignment="Center"></TextBlock>
                        <TextBlock Text="测试" Style="{StaticResource Tip-Fill-Success}" VerticalAlignment="Center"></TextBlock>
                        <TextBlock Text="测试" Style="{StaticResource Tip-Fill-Primary}" VerticalAlignment="Center"></TextBlock>
                        <TextBlock Text="测试" Style="{StaticResource Tip-Fill-Warning}" VerticalAlignment="Center"></TextBlock>
                        <TextBlock Text="测试" Style="{StaticResource Tip-Fill-Danger}" VerticalAlignment="Center"></TextBlock>
                        <Label Style="{StaticResource Chip}">
                            <TextBlock Text="Basic Chip"></TextBlock>
                        </Label>
                        <Label Style="{StaticResource Chip-Success}">
                            <TextBlock Text="Basic Chip"></TextBlock>
                        </Label>
                        <Label Style="{StaticResource Chip-Primary}">
                            <TextBlock Text="Basic Chip"></TextBlock>
                        </Label>
                        <Label Style="{StaticResource Chip-Warning}">
                            <TextBlock Text="Basic Chip"></TextBlock>
                        </Label>
                        <Label Style="{StaticResource Chip-Danger}">
                            <TextBlock Text="Basic Chip"></TextBlock>
                        </Label>
                        <Button Content="Click" Style="{StaticResource FlatButton}" Width="100" Margin="2" Command="{Binding TestClickCommand}"></Button>
                        <Button Content="Click" Style="{StaticResource FlatButton-Success}" Command="{Binding TestEventCommand}"></Button>
                        <Button Content="Click" Style="{StaticResource FlatButton-Primary}" Click="Button_Click"></Button>
                        <Button Content="Click" Style="{StaticResource FlatButton-Warning}"></Button>
                        <Button Content="Click" Style="{StaticResource FlatButton-Danger}"></Button>
                        <Button Content="Click" Style="{StaticResource FlatButton-Danger}" IsEnabled="False"></Button>

                        <Button Content="Click" Style="{StaticResource RaisedButton}" Width="30"></Button>
                        <Button Content="Click" Style="{StaticResource RaisedButton-Success}" Width="30"></Button>
                        <Button Content="Click" Style="{StaticResource RaisedButton-Primary}" Width="30"></Button>
                        <Button Content="Click" Style="{StaticResource RaisedButton-Warning}" Width="30"></Button>
                        <Button Content="Click" Style="{StaticResource RaisedButton-Danger}" Width="30"></Button>
                        <Button Content="Click" Style="{StaticResource RaisedButton-Danger}" Width="30" IsEnabled="False"></Button>

                        <Button Content="Click" Style="{StaticResource FloatingButton}" Width="30" Height="30"></Button>
                        <Button Content="Click" Style="{StaticResource FloatingButton-Success}" Width="30" Height="30"></Button>
                        <Button Content="Click" Style="{StaticResource FloatingButton-Primary}" Width="30" Height="30"></Button>
                        <Button Content="Click" Style="{StaticResource FloatingButton-Warning}" Width="30" Height="30"></Button>
                        <Button Content="Click" Style="{StaticResource FloatingButton-Danger}" Width="30" Height="30"></Button>
                        <Button Content="Click" Style="{StaticResource FloatingButton-Danger}" Width="30" Height="30" IsEnabled="False"></Button>

                        <Button Style="{StaticResource FloatingButton-Danger}" Width="30" Height="30" IsEnabled="False">
                            <TextBlock Style="{StaticResource IconTrash}" FontSize="20"></TextBlock>
                        </Button>

                        <RadioButton Content="RadioButton" Style="{StaticResource InputRadio}"></RadioButton>
                        <RadioButton Content="RadioButton" Style="{StaticResource InputRadio-Success}"></RadioButton>
                        <RadioButton Content="RadioButton" Style="{StaticResource InputRadio-Danger}"></RadioButton>
                        <RadioButton Content="RadioButton" Style="{StaticResource InputRadio-Warning}" IsChecked="True"></RadioButton>
                        <RadioButton Content="RadioButton" Style="{StaticResource InputRadio-Danger}"></RadioButton>
                        <RadioButton Content="RadioButton" Style="{StaticResource InputRadio-Danger}" IsEnabled="False" IsChecked="True"></RadioButton>


                        <CheckBox Content="RadioButton" Style="{StaticResource InputCheck}"></CheckBox>
                        <CheckBox Content="RadioButton" Style="{StaticResource InputCheck-Success}"></CheckBox>
                        <CheckBox Content="RadioButton" Style="{StaticResource InputCheck-Danger}"></CheckBox>
                        <CheckBox Content="RadioButton" Style="{StaticResource InputCheck-Warning}" IsChecked="True"></CheckBox>
                        <CheckBox Content="RadioButton" Style="{StaticResource InputCheck-Danger}"></CheckBox>
                        <CheckBox Content="RadioButton" Style="{StaticResource InputCheck-Danger}" IsEnabled="False" IsChecked="True"></CheckBox>

                        <TextBox Width="100" Style="{StaticResource InputText}"></TextBox>
                        <TextBox Width="100" Style="{StaticResource InputText-Success}" Background="{StaticResource GreyBrush}" Foreground="White"></TextBox>
                        <TextBox Width="100" Style="{StaticResource InputText-Primary}"></TextBox>
                        <TextBox Width="100" Style="{StaticResource InputText-Warning}"></TextBox>
                        <TextBox Width="100" Style="{StaticResource InputText-Danger}"></TextBox>
                        <TextBox Width="100" Style="{StaticResource InputText-Danger}" IsEnabled="False"></TextBox>


                        <TextBlock>
                                <Hyperlink NavigateUri="http://www.qq.com">www.baidu.com</Hyperlink>
                        </TextBlock>
                        <ToggleButton Style="{StaticResource SwitchToggleButton}" Content="ToggleButton"></ToggleButton>
                        <ToggleButton Style="{StaticResource SwitchToggleButton-Success}" Content="ToggleButton"></ToggleButton>
                        <ToggleButton Style="{StaticResource SwitchToggleButton-Primary}" Content="ToggleButton"></ToggleButton>
                        <ToggleButton Style="{StaticResource SwitchToggleButton-Warning}" Content="ToggleButton"></ToggleButton>
                        <ToggleButton Style="{StaticResource SwitchToggleButton-Danger}" IsChecked="True" Content="ToggleButton"></ToggleButton>

                        <RepeatButton Content="hello" Style="{StaticResource SimpleRepeatButton}"></RepeatButton>
                        <RepeatButton Content="hello" Style="{StaticResource SimpleRepeatButton-Success}"></RepeatButton>
                        <RepeatButton Content="hello" Style="{StaticResource SimpleRepeatButton-Primary}"></RepeatButton>
                        <RepeatButton Content="hello" Style="{StaticResource SimpleRepeatButton-Warning}"></RepeatButton>
                        <RepeatButton Content="hello" Style="{StaticResource SimpleRepeatButton-Danger}"></RepeatButton>

                        <Slider Maximum="100" Value="20" Width="100" Style="{StaticResource Slider}"></Slider>
                        <Slider Maximum="100" Value="20" Width="100" Style="{StaticResource Slider-Success}"></Slider>
                        <Slider Maximum="100" Value="20" Width="100" Style="{StaticResource Slider-Primary}"></Slider>
                        <Slider Maximum="100" Value="20" Width="100" Style="{StaticResource Slider-Warning}"></Slider>
                        <Slider Maximum="100" Value="20" Width="100" Style="{StaticResource Slider-Danger}"></Slider>

                        <ProgressBar Width="100" Maximum="100" Value="20" Style="{StaticResource LineProgress}"></ProgressBar>
                        <ProgressBar Width="100" Maximum="100" Value="20" Style="{StaticResource LineProgress-Success}"></ProgressBar>
                        <ProgressBar Width="100" Maximum="100" Value="20" Style="{StaticResource LineProgress-Primary}"></ProgressBar>
                        <ProgressBar Width="100" Maximum="100" Value="20" Style="{StaticResource LineProgress-Warning}"></ProgressBar>
                        <ProgressBar Width="100" Maximum="100" Value="100" Style="{StaticResource LineProgress-Danger}"></ProgressBar>

                        <Button Content="Menu" Style="{StaticResource FlatButton}">
                            <Button.ContextMenu>
                                <ContextMenu Style="{StaticResource BaseContextMenu}">
                                    <MenuItem Header="Menu1" Style="{StaticResource MenuItem-H}">
                                        <MenuItem.Icon>
                                            <TextBlock Style="{StaticResource IconBookmark}"></TextBlock>
                                        </MenuItem.Icon>
                                        <MenuItem Header="Menu2" Style="{StaticResource MenuItem-H}"></MenuItem>
                                        <MenuItem Header="Menu3" Style="{StaticResource MenuItem-H}"></MenuItem>
                                    </MenuItem>
                                    <MenuItem Header="Menu2" Style="{StaticResource MenuItem-H}"></MenuItem>
                                    <MenuItem Header="Menu3" Style="{StaticResource MenuItem-H}"></MenuItem>
                                </ContextMenu>
                            </Button.ContextMenu>
                        </Button>

                        <ComboBox Style="{StaticResource InputSelect}" ItemContainerStyle="{StaticResource InputSelectOption}" Width="100">
                            <ComboBoxItem>学生1</ComboBoxItem>
                            <ComboBoxItem>学生2</ComboBoxItem>
                            <ComboBoxItem>学生3</ComboBoxItem>
                        </ComboBox>
                        <ComboBox Style="{StaticResource InputSelect-Success}" ItemContainerStyle="{StaticResource InputRadioSelectOption}" Width="100">
                            <ComboBoxItem>学生1</ComboBoxItem>
                            <ComboBoxItem>学生2</ComboBoxItem>
                            <ComboBoxItem>学生3</ComboBoxItem>
                        </ComboBox>
                        <ComboBox Style="{StaticResource InputSelect-Primary}" Width="100">
                            <ComboBoxItem>学生1</ComboBoxItem>
                            <ComboBoxItem>学生2</ComboBoxItem>
                            <ComboBoxItem>学生3</ComboBoxItem>
                        </ComboBox>
                        <ComboBox Style="{StaticResource InputSelect-Warning}" Width="100">
                            <ComboBoxItem>学生1</ComboBoxItem>
                            <ComboBoxItem>学生2</ComboBoxItem>
                            <ComboBoxItem>学生3</ComboBoxItem>
                        </ComboBox>
                        <ComboBox Style="{StaticResource InputSelect-Danger}" Width="100" ItemContainerStyle="{StaticResource InputCheckSelectOption}">
                            <ComboBoxItem>学生1</ComboBoxItem>
                            <ComboBoxItem>学生2</ComboBoxItem>
                            <ComboBoxItem>学生3</ComboBoxItem>
                        </ComboBox>

                        <DatePicker Style="{StaticResource DatePicker-Danger}" Width="120"></DatePicker>

                        <control:MCombobox Width="100" x:Name="mcob">
                        </control:MCombobox>
                    </WrapPanel>
                </ContentControl>
            </TabItem>
            <TabItem Header="Container">
                <StackPanel Orientation="Vertical">
                    <GroupBox Style="{StaticResource SwitchPanel}">
                        <GroupBox.Header>
                            <TextBlock Text="标题"></TextBlock>
                        </GroupBox.Header>
                        <Grid>
                            <ScrollViewer Height="200">
                                <Image Source="http://pic37.nipic.com/20140113/8800276_184927469000_2.png" MinHeight="300" MinWidth="600"></Image>
                            </ScrollViewer>
                        </Grid>
                    </GroupBox>

                    <ContentControl Style="{StaticResource CardPanel}">
                        <ListBox Style="{StaticResource Lists}" SelectionMode="Single" ItemContainerStyle="{StaticResource RadioListsItem}">
                            <ListBoxItem>学生1</ListBoxItem>
                            <ListBoxItem>学生2</ListBoxItem>
                            <ListBoxItem>学生3</ListBoxItem>
                        </ListBox>
                    </ContentControl>

                    <ContentControl Style="{StaticResource CardPanel}">
                        <ListBox Style="{StaticResource Lists}" SelectionMode="Multiple" ItemContainerStyle="{StaticResource CheckListsItem}">
                            <ListBoxItem>学生1</ListBoxItem>
                            <ListBoxItem>学生2</ListBoxItem>
                            <ListBoxItem>学生3</ListBoxItem>
                        </ListBox>
                    </ContentControl>

                    <GroupBox Style="{StaticResource SwitchPanel}">
                        <GroupBox.Header>
                            <TextBlock Text="标题"></TextBlock>
                        </GroupBox.Header>
                        <Grid>
                            <TabControl Style="{StaticResource BriefTabs}"  Height="200">
                                <TabItem Header="图片1">
                                    <ScrollViewer>
                                        <Image Source="http://pic1.win4000.com/wallpaper/c/53cdd1f7c1f21.jpg"></Image>
                                    </ScrollViewer>
                                </TabItem>
                                <TabItem Header="图片2">
                                    <ScrollViewer>
                                        <Image Source="http://pic41.nipic.com/20140509/12888705_172059218136_2.jpg"></Image>
                                    </ScrollViewer>
                                </TabItem>
                                <TabItem Header="图片3">
                                    <ScrollViewer>
                                        <Image Source="http://pic32.nipic.com/20130810/7772606_170808427000_2.jpg"></Image>
                                    </ScrollViewer>
                                </TabItem>
                            </TabControl>
                        </Grid>
                    </GroupBox>
                </StackPanel>
            </TabItem>

            <TabItem Header="3D">
                <Viewport3D>
                    <Viewport3D.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="Cube" Storyboard.TargetProperty="(Model3D.Transform).(Transform3DGroup.Children)[1].(RotateTransform3D.Rotation).(AxisAngleRotation3D.Angle)" From="0" To="360" Duration="0:0:5" AutoReverse="True" RepeatBehavior="Forever"></DoubleAnimation>
                                    <!--<DoubleAnimation Storyboard.TargetName="Cube" Storyboard.TargetProperty="(Model3D.Transform).(Transform3DGroup.Children)[2].(RotateTransform3D.Rotation).(AxisAngleRotation3D.Angle)" From="0" To="360" Duration="0:0:5" AutoReverse="True" RepeatBehavior="Forever"></DoubleAnimation>
                                    <DoubleAnimation Storyboard.TargetName="Cube" Storyboard.TargetProperty="(Model3D.Transform).(Transform3DGroup.Children)[3].(RotateTransform3D.Rotation).(AxisAngleRotation3D.Angle)" From="0" To="360" Duration="0:0:5" AutoReverse="True" RepeatBehavior="Forever"></DoubleAnimation>-->

                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Viewport3D.Triggers>
                    <ModelVisual3D>
                        <ModelVisual3D.Content>
                            <Model3DGroup x:Name="Cube">
                                <Model3DGroup.Transform>
                                    <Transform3DGroup>
                                        <ScaleTransform3D></ScaleTransform3D>
                                        <RotateTransform3D>
                                            <RotateTransform3D.Rotation>
                                                <AxisAngleRotation3D Angle="0" Axis="0 1 0"/>
                                            </RotateTransform3D.Rotation>
                                        </RotateTransform3D>
                                        <RotateTransform3D>
                                            <RotateTransform3D.Rotation>
                                                <AxisAngleRotation3D Angle="0" Axis="0 0 1"/>
                                            </RotateTransform3D.Rotation>
                                        </RotateTransform3D>
                                        <RotateTransform3D>
                                            <RotateTransform3D.Rotation>
                                                <AxisAngleRotation3D Angle="0" Axis="1 0 0"/>
                                            </RotateTransform3D.Rotation>
                                        </RotateTransform3D>
                                        <TranslateTransform3D></TranslateTransform3D>
                                    </Transform3DGroup>
                                </Model3DGroup.Transform>

                                <GeometryModel3D>
                                    <GeometryModel3D.Geometry>
                                        <MeshGeometry3D Positions="2,2,-2 -2,2,-2 -2,-2,-2 2,-2,-2" TriangleIndices="0,1,2 0,2,3"></MeshGeometry3D>
                                    </GeometryModel3D.Geometry>
                                    <GeometryModel3D.Material>
                                        <DiffuseMaterial Brush="{StaticResource BlueBrush}"></DiffuseMaterial>
                                    </GeometryModel3D.Material>
                                </GeometryModel3D>

                                <GeometryModel3D>
                                    <GeometryModel3D.Geometry>
                                        <MeshGeometry3D Positions="2,2,2 -2,2,2 -2,-2,2 2,-2,2" TriangleIndices="0,1,2 0,2,3"></MeshGeometry3D>
                                    </GeometryModel3D.Geometry>
                                    <GeometryModel3D.Material>
                                        <DiffuseMaterial Brush="{StaticResource GreenBrush}"></DiffuseMaterial>
                                    </GeometryModel3D.Material>
                                </GeometryModel3D>

                                <GeometryModel3D>
                                    <GeometryModel3D.Geometry>
                                        <MeshGeometry3D Positions="2,2,2 2,2,-2 -2,2,-2 -2,2,2" TriangleIndices="0,1,2 0,2,3"></MeshGeometry3D>
                                    </GeometryModel3D.Geometry>
                                    <GeometryModel3D.Material>
                                        <DiffuseMaterial Brush="{StaticResource RedBrush}"></DiffuseMaterial>
                                    </GeometryModel3D.Material>
                                </GeometryModel3D>

                                <GeometryModel3D>
                                    <GeometryModel3D.Geometry>
                                        <MeshGeometry3D Positions="2,-2,2 2,-2,-2 -2,-2,-2 -2,-2,2" TriangleIndices="0,1,2 0,2,3"></MeshGeometry3D>
                                    </GeometryModel3D.Geometry>
                                    <GeometryModel3D.Material>
                                        <DiffuseMaterial Brush="{StaticResource YellowBrush}"></DiffuseMaterial>
                                    </GeometryModel3D.Material>
                                </GeometryModel3D>

                                <GeometryModel3D>
                                    <GeometryModel3D.Geometry>
                                        <MeshGeometry3D Positions="2,2,2 2,-2,2 2,-2,-2 2,2,-2" TriangleIndices="0,1,2 0,2,3"></MeshGeometry3D>
                                    </GeometryModel3D.Geometry>
                                    <GeometryModel3D.Material>
                                        <DiffuseMaterial Brush="{StaticResource PurpleBrush}"></DiffuseMaterial>
                                    </GeometryModel3D.Material>
                                </GeometryModel3D>

                                <GeometryModel3D>
                                    <GeometryModel3D.Geometry>
                                        <MeshGeometry3D Positions="-2,2,2 -2,-2,2 -2,-2,-2 -2,2,-2" TriangleIndices="0,1,2 0,2,3"></MeshGeometry3D>
                                    </GeometryModel3D.Geometry>
                                    <GeometryModel3D.Material>
                                        <DiffuseMaterial Brush="{StaticResource AmberBrush}"></DiffuseMaterial>
                                    </GeometryModel3D.Material>
                                </GeometryModel3D>
                            </Model3DGroup>
                        </ModelVisual3D.Content>
                    </ModelVisual3D>

                    <ModelVisual3D>
                        <ModelVisual3D.Content>
                            <Model3DGroup>
                                <AmbientLight></AmbientLight>
                            </Model3DGroup>
                        </ModelVisual3D.Content>
                    </ModelVisual3D>

                    <Viewport3D.Camera>
                        <PerspectiveCamera Position="20,20,20" LookDirection="-1,-1,-1">
                        </PerspectiveCamera>
                    </Viewport3D.Camera>
                </Viewport3D>
            </TabItem>

            <TabItem Header="IM">
                <TabItem.Resources>
                    <!--消息列表风格-->
                    <Style TargetType="ListBox" x:Key="MessagesList">
                        <Setter Property="BorderBrush" Value="Transparent"></Setter>
                        <Setter Property="BorderThickness" Value="0"></Setter>
                        <Setter Property="Background" Value="Transparent"></Setter>
                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"></Setter>
                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"></Setter>
                    </Style>

                    <!--消息列表子项风格-->
                    <Style TargetType="ListBoxItem" x:Key="MessageItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
                        <Setter Property="MinHeight" Value="30"></Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Grid>
                                        <Border x:Name="PART_Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                            <ContentPresenter x:Name="PART_Content" Margin="5,2" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontSize="{TemplateBinding FontSize}" TextBlock.FontFamily="{TemplateBinding FontFamily}" TextBlock.FontStyle="{TemplateBinding FontStyle}" TextBlock.FontStretch="{TemplateBinding FontStretch}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}"></ContentPresenter>
                                        </Border>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!--消息项风格-->
                    <Style TargetType="Label" x:Key="MessageContentWrapper">
                        <Setter Property="Background" Value="LightGray"></Setter>
                        <Setter Property="BorderBrush" Value="Transparent"></Setter>
                        <Setter Property="BorderThickness" Value="0"></Setter>
                        <Setter Property="Padding" Value="5"></Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Label}">
                                    <Grid>
                                        <Border x:Name="PART_Border" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                            <ContentPresenter x:Name="PART_Content" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontSize="{TemplateBinding FontSize}" TextBlock.FontFamily="{TemplateBinding FontFamily}" TextBlock.FontStyle="{TemplateBinding FontStyle}" TextBlock.FontStretch="{TemplateBinding FontStretch}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}"></ContentPresenter>
                                        </Border>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!--混合消息内容列表风格-->
                    <Style TargetType="ListView" x:Key="MixMessages">
                        <Setter Property="BorderBrush" Value="Transparent"></Setter>
                        <Setter Property="BorderThickness" Value="0"></Setter>
                        <Setter Property="Background" Value="Transparent"></Setter>
                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"></Setter>
                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"></Setter>
                    </Style>

                    <!--混合消息内容子项风格-->
                    <Style TargetType="ListViewItem" x:Key="MixMessageItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                        <Setter Property="VerticalContentAlignment" Value="Bottom"></Setter>
                        <Setter Property="MinHeight" Value="30"></Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Grid>
                                        <Border x:Name="PART_Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                            <ContentPresenter x:Name="PART_Content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontSize="{TemplateBinding FontSize}" TextBlock.FontFamily="{TemplateBinding FontFamily}" TextBlock.FontStyle="{TemplateBinding FontStyle}" TextBlock.FontStretch="{TemplateBinding FontStretch}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}"></ContentPresenter>
                                        </Border>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!--混合消息子项容器模板-->
                    <ItemsPanelTemplate x:Key="MixMessagesPanelTemplate">
                        <WrapPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>

                    <!--非混合消息内容数据模板-->
                    <DataTemplate x:Key="MessageContentTemplate">
                        <Grid >
                            <TextBlock x:Name="unknown" Text="消息类型暂不支持" TextWrapping="Wrap" Visibility="Collapsed"></TextBlock>
                            <TextBlock x:Name="txt" Text="{Binding Text}" TextWrapping="Wrap" Visibility="Collapsed"></TextBlock>
                            <Image x:Name="img" Source="{Binding ThumbUrl}" Visibility="Collapsed" MaxHeight="150">
                                <Image.InputBindings>
                                    <MouseBinding Gesture="LeftDoubleClick" Command="{Binding DataContext.ShowImageCommand, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}" CommandParameter="{Binding}"/>
                                </Image.InputBindings>
                            </Image>
                        </Grid>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding Type}" Value="Unknown">
                                <Setter TargetName="unknown" Property="Visibility" Value="Visible"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Type}" Value="Text">
                                <Setter TargetName="txt" Property="Visibility" Value="Visible"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Type}" Value="Image">
                                <Setter TargetName="img" Property="Visibility" Value="Visible"></Setter>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>

                    <!--混合消息内容数据模板-->
                    <DataTemplate x:Key="MixMessageContentTemplate">
                        <Grid>
                            <ContentPresenter x:Name="noMix" ContentTemplate="{StaticResource MessageContentTemplate}" Visibility="Visible"></ContentPresenter>
                            <ListView x:Name="mix" Style="{StaticResource MixMessages}" ItemContainerStyle="{StaticResource MixMessageItem}" ItemsPanel="{StaticResource MixMessagesPanelTemplate}" ItemTemplate="{DynamicResource MessageContentTemplate}"  ItemsSource="{Binding InnerMessages}" Visibility="Collapsed"></ListView>
                        </Grid>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding Type}" Value="Mix">
                                <Setter TargetName="noMix" Property="Visibility" Value="Collapsed"></Setter>
                                <Setter TargetName="mix" Property="Visibility" Value="Visible"></Setter>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>

                    <!--消息数据模板-->
                    <DataTemplate x:Key="MessageItemTemplate">
                        <Grid x:Name="grid">
                            <Grid HorizontalAlignment="Left" Width="{Binding ActualWidth,Converter={x:Static wpf:ValueConverters.AvgConverter},ConverterParameter=2,  ElementName=grid}" x:Name="leftGrid" Visibility="Visible">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Label Content="{Binding Sender}"></Label>
                                <Label Content="{Binding SendTime,Converter={x:Static wpf:ValueConverters.TimeToStringConverter}}" Grid.Column="1" HorizontalAlignment="Left"></Label>
                                <Label Grid.Row="1" Grid.ColumnSpan="2" Style="{StaticResource MessageContentWrapper}" HorizontalAlignment="Left">
                                    <ContentPresenter ContentTemplate="{StaticResource MixMessageContentTemplate}"></ContentPresenter>
                                </Label>
                            </Grid>
                            <Grid HorizontalAlignment="Right" Width="{Binding ActualWidth,Converter={x:Static wpf:ValueConverters.AvgConverter},ConverterParameter=2,  ElementName=grid}"  x:Name="rightGrid" Visibility="Collapsed">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Label Content="{Binding Sender}" Grid.Column="1"></Label>
                                <Label Content="{Binding SendTime,Converter={x:Static wpf:ValueConverters.TimeToStringConverter}}" HorizontalAlignment="Right"></Label>
                                <Label Grid.Row="1" Grid.ColumnSpan="2" Style="{StaticResource MessageContentWrapper}" HorizontalAlignment="Right">
                                    <ContentPresenter ContentTemplate="{StaticResource MixMessageContentTemplate}"></ContentPresenter>
                                </Label>
                            </Grid>
                        </Grid>

                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding Left}" Value="False">
                                <Setter TargetName="leftGrid" Property="Visibility" Value="Collapsed"></Setter>
                                <Setter TargetName="rightGrid" Property="Visibility" Value="Visible"></Setter>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </TabItem.Resources>
                <ListBox x:Name="chat" Style="{StaticResource MessagesList}" ItemContainerStyle="{StaticResource MessageItem}" ItemTemplate="{StaticResource MessageItemTemplate}" ItemsSource="{Binding Messages}"></ListBox>
            </TabItem>
        </TabControl>

    </DockPanel>
</Window>
