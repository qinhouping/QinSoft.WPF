<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:QinSoft.WPF.Themes.Default">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Color.xaml"></ResourceDictionary>
        <ResourceDictionary Source="Font.xaml"></ResourceDictionary>
        <ResourceDictionary Source="Button.xaml"></ResourceDictionary>
        <ResourceDictionary Source="Input.xaml"></ResourceDictionary>
        <ResourceDictionary Source="Panel.xaml"></ResourceDictionary>
        <ResourceDictionary Source="../Common/FontAwesome.xaml"></ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>
    <Style TargetType="{x:Type Calendar}" x:Key="BaseCalendar">
        <Setter Property="Background" Value="{StaticResource DefaultCardBackgroundBrush}"></Setter>
        <Setter Property="Foreground" Value="{StaticResource DefaultForegroundBrush}"></Setter>
        <Setter Property="BorderBrush" Value="{StaticResource GreyBrush}"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>

        <Setter Property="CalendarDayButtonStyle">
            <Setter.Value>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource FloatingButton}">
                    <Setter Property="Height" Value="30"></Setter>
                    <Setter Property="Width" Value="30"></Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type DatePicker}" x:Key="BaseDatePicker">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Foreground" Value="{StaticResource DefaultForegroundBrush}"></Setter>
        <Setter Property="BorderBrush" Value="{StaticResource GreyBrush}"></Setter>
        <Setter Property="BorderThickness" Value="0,0,0,1"></Setter>
        <Setter Property="SelectedDateFormat" Value="Short"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="PART_Border" Grid.ColumnSpan="3"  BorderBrush="{TemplateBinding Foreground}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" ClipToBounds="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Border x:Name="PART_Rectangle" Grid.Column="2" Opacity="0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,3" Margin="-1" RenderTransformOrigin="0.5,0.5">
                                    <Border.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                            <RotateTransform Angle="0" CenterX="0" CenterY="0"/>
                                            <TranslateTransform X="0" Y="0"/>
                                        </TransformGroup>
                                    </Border.RenderTransform>
                                </Border>
                            </Grid>
                        </Border>
                        <TextBlock Style="{StaticResource IconCalendar}" VerticalAlignment="Center"></TextBlock>
                        <TextBox x:Name="PART_TextBox" Style="{StaticResource BaseTextBox}" Grid.Column="1" VerticalAlignment="Center" Text="{TemplateBinding Text}"></TextBox>
                        <ToggleButton x:Name="PART_Toggle" Style="{StaticResource RotateToggleButton}" Grid.Column="2" IsChecked="{Binding IsDropDownOpen,RelativeSource={RelativeSource Mode=TemplatedParent},Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Height="30" Width="30">
                            <TextBlock Style="{StaticResource IconChevronDown}"></TextBlock>
                        </ToggleButton>

                        <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Top"  PopupAnimation="Slide">
                            <ContentControl Style="{StaticResource CardPanel}">
                                <Calendar Style="{TemplateBinding CalendarStyle}"></Calendar>
                            </ContentControl>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsFocused,ElementName=PART_TextBox}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_Rectangle" Storyboard.TargetProperty="Opacity" From="0" To="1" BeginTime="0" Duration="0:0:0.1" AutoReverse="False"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_Rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" From="1" To="5" BeginTime="0:0:0.1" Duration="0:0:0.2" AutoReverse="False"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>

                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_Rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" From="5" To="1" Duration="0:0:0.2" AutoReverse="False"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_Rectangle" Storyboard.TargetProperty="Opacity" From="1" To="0" BeginTime="0:0:0.2" Duration="0:0:0.1" AutoReverse="False"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type DatePicker}" x:Key="DatePicker" BasedOn="{StaticResource BaseDatePicker}"></Style>
    <Style TargetType="{x:Type DatePicker}" x:Key="DatePicker-Success" BasedOn="{StaticResource DatePicker}">
        <Setter Property="BorderBrush" Value="{StaticResource GreenBrush}"></Setter>
    </Style>
    <Style TargetType="{x:Type DatePicker}" x:Key="DatePicker-Primary" BasedOn="{StaticResource DatePicker}">
        <Setter Property="BorderBrush" Value="{StaticResource BlueBrush}"></Setter>
    </Style>
    <Style TargetType="{x:Type DatePicker}" x:Key="DatePicker-Warning" BasedOn="{StaticResource DatePicker}">
        <Setter Property="BorderBrush" Value="{StaticResource OrangeBrush}"></Setter>
    </Style>
    <Style TargetType="{x:Type DatePicker}" x:Key="DatePicker-Danger" BasedOn="{StaticResource DatePicker}">
        <Setter Property="BorderBrush" Value="{StaticResource RedBrush}"></Setter>
    </Style>
</ResourceDictionary>