<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:QinSoft.WPF.Theme.Default">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Color.xaml"></ResourceDictionary>
        <ResourceDictionary Source="Font.xaml"></ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>
    <!--按钮基础Style-->
    <Style x:Key="BaseButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource DefaultBackgroundBrush}"></Setter>
        <Setter Property="Foreground" Value="{StaticResource DefaultForegroundBrush}"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}"></Setter>
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Cursor" Value="None"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--悬浮响应按钮(Floating action button)-->
    <Style x:Key="FlatButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="PART_Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" VerticalAlignment="{TemplateBinding VerticalAlignment}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                            <Border.Effect>
                                <DropShadowEffect Color="{StaticResource Grey}" Direction="0" ShadowDepth="1" BlurRadius="4"></DropShadowEffect>
                            </Border.Effect>
                            <Border ClipToBounds="True">
                                <Ellipse x:Name="PART_Ellipse" Opacity="0" Height="30" Width="30" Fill="White" RenderTransformOrigin="0.5,0.5">
                                    <Ellipse.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                            <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
                                            <TranslateTransform X="0" Y="0"/>
                                        </TransformGroup>
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                            </Border>
                        </Border>
                        <ContentPresenter x:Name="PART_Content" Margin="5,2" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontSize="{TemplateBinding FontSize}" TextBlock.FontFamily="{TemplateBinding FontFamily}" TextBlock.FontStyle="{TemplateBinding FontStyle}" TextBlock.FontStretch="{TemplateBinding FontStretch}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}"></ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Ellipse"  Storyboard.TargetProperty="Opacity" BeginTime="0:0:0" AutoReverse="True">
                                        <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.0"></LinearDoubleKeyFrame>
                                        <LinearDoubleKeyFrame Value="0.3" KeyTime="0:0:0.1"></LinearDoubleKeyFrame>
                                        <LinearDoubleKeyFrame Value="0.3" KeyTime="0:0:0.4"></LinearDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimation Storyboard.TargetName="PART_Ellipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" From="1" To="5" BeginTime="0:0:0.1" Duration="0:0:0.3" AutoReverse="True"/>
                                    <DoubleAnimation Storyboard.TargetName="PART_Ellipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" From="1" To="5" BeginTime="0:0:0.1" Duration="0:0:0.3" AutoReverse="True"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource GreyBrush}"></Setter>
                            <Setter Property="Foreground" Value="{StaticResource DefaultBackgroundBrush}"></Setter>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{StaticResource Grey}" Direction="0" ShadowDepth="1" BlurRadius="8"></DropShadowEffect>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="FlatButton-Success" TargetType="{x:Type Button}" BasedOn="{StaticResource FlatButton}">
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Background" Value="{StaticResource GreenBrush}"></Setter>
    </Style>

    <Style x:Key="FlatButton-Primary" TargetType="{x:Type Button}" BasedOn="{StaticResource FlatButton}">
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Background" Value="{StaticResource BlueBrush}"></Setter>
    </Style>

    <Style x:Key="FlatButton-Danger" TargetType="{x:Type Button}" BasedOn="{StaticResource FlatButton}">
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Background" Value="{StaticResource RedBrush}"></Setter>
    </Style>

    <Style x:Key="FlatButton-Warning" TargetType="{x:Type Button}" BasedOn="{StaticResource FlatButton}">
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Background" Value="{StaticResource OrangeBrush}"></Setter>
    </Style>

    <!--浮动按钮(Raised button)-->
    <Style x:Key="RaisedButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButton}">
        <Setter Property="Background" Value="{StaticResource DefaultForegroundBrush}"></Setter>
        <Setter Property="Opacity" Value="1"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" VerticalAlignment="{TemplateBinding VerticalAlignment}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                            <Border x:Name="PART_Border" Opacity="0" Background="{TemplateBinding Background}" >
                            </Border>
                        </Border>
                        <Border ClipToBounds="True">
                            <Ellipse x:Name="PART_Ellipse" Opacity="0" Height="30" Width="30" Fill="White" RenderTransformOrigin="0.5,0.5">
                                <Ellipse.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Ellipse.RenderTransform>
                            </Ellipse>
                        </Border>
                        <ContentPresenter Margin="5,2" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontSize="{TemplateBinding FontSize}" TextBlock.FontFamily="{TemplateBinding FontFamily}" TextBlock.FontStyle="{TemplateBinding FontStyle}" TextBlock.FontStretch="{TemplateBinding FontStretch}" ContentStringFormat="{TemplateBinding ContentStringFormat}"></ContentPresenter>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Ellipse"  Storyboard.TargetProperty="Opacity" BeginTime="0:0:0" AutoReverse="True">
                                        <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.0"></LinearDoubleKeyFrame>
                                        <LinearDoubleKeyFrame Value="0.3" KeyTime="0:0:0.1"></LinearDoubleKeyFrame>
                                        <LinearDoubleKeyFrame Value="0.3" KeyTime="0:0:0.4"></LinearDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimation Storyboard.TargetName="PART_Ellipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" From="1" To="5" BeginTime="0:0:0.1" Duration="0:0:0.3" AutoReverse="True"/>
                                    <DoubleAnimation Storyboard.TargetName="PART_Ellipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" From="1" To="5" BeginTime="0:0:0.1" Duration="0:0:0.3" AutoReverse="True"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="Opacity" From="0" To="0.2" BeginTime="0:0:0" Duration="0:0:0.1" AutoReverse="False"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="Opacity" From="0.2" To="0.0" BeginTime="0:0:0" Duration="0:0:0.1" AutoReverse="False"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource DefaultBackgroundBrush}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RaisedButton-Primary" TargetType="{x:Type Button}" BasedOn="{StaticResource RaisedButton}">
        <Setter Property="Foreground" Value="{StaticResource BlueBrush}"></Setter>
        <Setter Property="Background" Value="{StaticResource BlueBrush}"></Setter>
    </Style>

    <Style x:Key="RaisedButton-Danger" TargetType="{x:Type Button}" BasedOn="{StaticResource RaisedButton}">
        <Setter Property="Foreground" Value="{StaticResource RedBrush}"></Setter>
        <Setter Property="Background" Value="{StaticResource RedBrush}"></Setter>
    </Style>

    <Style x:Key="RaisedButton-Success" TargetType="{x:Type Button}" BasedOn="{StaticResource RaisedButton}">
        <Setter Property="Foreground" Value="{StaticResource GreenBrush }"></Setter>
        <Setter Property="Background" Value="{StaticResource GreenBrush }"></Setter>
    </Style>

    <Style x:Key="RaisedButton-Warning" TargetType="{x:Type Button}" BasedOn="{StaticResource RaisedButton}">
        <Setter Property="Foreground" Value="{StaticResource OrangeBrush}"></Setter>
        <Setter Property="Background" Value="{StaticResource OrangeBrush}"></Setter>
    </Style>

    <!--扁平按钮(Flat button)-->
    <Style x:Key="FloatingButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Ellipse x:Name="PART_Border" StrokeThickness="0.5" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                            <Ellipse.Effect>
                                <DropShadowEffect BlurRadius="4" Opacity="1" ShadowDepth="0" Color="{StaticResource Grey}" Direction="0"></DropShadowEffect>
                            </Ellipse.Effect>
                        </Ellipse>
                        <Border ClipToBounds="True">
                            <Ellipse x:Name="PART_Ellipse" Opacity="0" Height="30" Width="30" Fill="White" RenderTransformOrigin="0.5,0.5">
                                <Ellipse.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Ellipse.RenderTransform>
                            </Ellipse>
                        </Border>
                        <ContentPresenter Margin="2" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontSize="{TemplateBinding FontSize}" TextBlock.FontFamily="{TemplateBinding FontFamily}" TextBlock.FontStyle="{TemplateBinding FontStyle}" TextBlock.FontStretch="{TemplateBinding FontStretch}" ContentStringFormat="{TemplateBinding ContentStringFormat}"></ContentPresenter>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Ellipse"  Storyboard.TargetProperty="Opacity" BeginTime="0:0:0" AutoReverse="True">
                                        <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.0"></LinearDoubleKeyFrame>
                                        <LinearDoubleKeyFrame Value="0.3" KeyTime="0:0:0.1"></LinearDoubleKeyFrame>
                                        <LinearDoubleKeyFrame Value="0.3" KeyTime="0:0:0.4"></LinearDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimation Storyboard.TargetName="PART_Ellipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" From="1" To="5" BeginTime="0:0:0.1" Duration="0:0:0.3" AutoReverse="True"/>
                                    <DoubleAnimation Storyboard.TargetName="PART_Ellipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" From="1" To="5" BeginTime="0:0:0.1" Duration="0:0:0.3" AutoReverse="True"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource GreyBrush}"></Setter>
                            <Setter Property="Foreground" Value="{StaticResource DefaultBackgroundBrush}"></Setter>
                        </Trigger>


                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{StaticResource Grey}" Direction="0" ShadowDepth="1" BlurRadius="8"></DropShadowEffect>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FloatingButton-Primary" TargetType="{x:Type Button}" BasedOn="{StaticResource FloatingButton}">
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Background" Value="{StaticResource BlueBrush}"></Setter>
    </Style>

    <Style x:Key="FloatingButton-Danger" TargetType="{x:Type Button}" BasedOn="{StaticResource FloatingButton}">
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Background" Value="{StaticResource RedBrush}"></Setter>
    </Style>

    <Style x:Key="FloatingButton-Success" TargetType="{x:Type Button}" BasedOn="{StaticResource FloatingButton}">
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Background" Value="{StaticResource GreenBrush}"></Setter>
    </Style>

    <Style x:Key="FloatingButton-Warning" TargetType="{x:Type Button}" BasedOn="{StaticResource FloatingButton}">
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Background" Value="{StaticResource OrangeBrush}"></Setter>
    </Style>

</ResourceDictionary>